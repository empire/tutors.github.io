<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: php-fundamental | آموزش روش های توسعه نرم افزار]]></title>
  <link href="http://tutors.github.io/blog/categories/php-fundamental/atom.xml" rel="self"/>
  <link href="http://tutors.github.io/"/>
  <updated>2013-08-11T22:24:12+04:30</updated>
  <id>http://tutors.github.io/</id>
  <author>
    <name><![CDATA[حسین زلفی]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[گرامر زبان PHP]]></title>
    <link href="http://tutors.github.io/blog/2013/08/12/php-syntax/"/>
    <updated>2013-08-12T13:59:00+04:30</updated>
    <id>http://tutors.github.io/blog/2013/08/12/php-syntax</id>
    <content type="html"><![CDATA[<h2>گرامر زبان PHP</h2>

<p>زبان PHP بر روی سرور اجرا می شود و نتیجه آن که به صورت HTML است
به مرورگر برگردانده می شود. در حقیقت هنگامی که کدهای PHP اجرا می شوند در صورتی
که به source آنها نگاه کنیم هیچ کد PHP ای دیده نمی شود،
بلکه تنها کدهای HTML دیده می شوند، بدین معنی که  Apache کدهای PHP را به HTML
تبدیل می کند. کدهای PHP در قالبی به صورت زیر و در بین تگ body نوشته می شوند:</p>

<p><div class="highlight"><pre><code class="html"><span class="ni">&amp;lt;</span>!DOCTYPE html&gt;
<span class="nt">&lt;html&gt;</span>
<span class="nt">&lt;body&gt;&lt;/p&gt;</span>

<span class="nt">&lt;p&gt;&lt;/body&gt;</span>
<span class="nt">&lt;/html&gt;&lt;/p&gt;</span>

<span class="nt">&lt;p&gt;</span>
</code></pre></div></p>

<h3>گرامر کلی زبان PHP</h3>

<p>شما می توانید کد PHP را در هر ویرایشگری بنویسید. این کد با تگ  <strong> php?> </strong> آغاز
و با تگ <strong> &lt;? </strong> خاتمه می یابد:
<div class="highlight"><pre><code class="php"><span class="x">&lt;/p&gt;</span>

<span class="x">&lt;p&gt;&amp;lt;?php</span>
<span class="x">کدهای PHP در این قسمت نوشته می شوند//</span>
<span class="x">?&gt;&lt;/p&gt;</span>

<span class="x">&lt;p&gt;</span>
</code></pre></div></p>

<p>همانطور که پیش از این گفته شد، پسوند پیش فرض فایل های <strong>php</strong> ، PHP<strong>.</strong> می باشد. به طور کلی هر فایل PHP شامل تگ های HTML و کدهای اسکریپتی PHP می باشد. در زیر مثال ساده ای از یک فایل PHP آورده شده است.</p>

<p><strong>مثال: </strong>کد PHPای بنویسید که کلمه <em>!Hello World</em> را در سرور چاپ کند:</p>

<p><div class="highlight"><pre><code class="php"><span class="x">&lt;/p&gt;</span>

<span class="x">&lt;p&gt;&amp;lt;?php&lt;/p&gt;</span>

<span class="x">&lt;pre&gt;&lt;code&gt;echo &quot;Hello World!&quot;;</span>
<span class="x">&lt;/code&gt;&lt;/pre&gt;</span>

<span class="x">&lt;p&gt;?&gt;&lt;/p&gt;</span>

<span class="x">&lt;p&gt;</span>
</code></pre></div></p>

<p><strong> نتیجه اجرا: </strong>
<div class="highlight"><pre><code class="sh">&lt;/p&gt;

&lt;p&gt;Hello World!&lt;/p&gt;

&lt;p&gt;
</code></pre></div></p>

<p>هر خط کد در PHP می بایست با یک علامت <strong> ; </strong> خاتمه یابد. علامت <strong> ; </strong> یک جداکننده می باشد
و به منظور جدا سازی مجموعه ای از دستورالعمل ها از یکدیگر به کار می رود.</p>

<p>در PHP دو روش برای چاپ متن در مرورگر وجود دارد: <strong> echo </strong> و <strong> print </strong></p>

<h3>نوشتن توضیحات در PHP</h3>

<p>توضیحات دستوراتی هستند که کامپایلر (برنامه یا مجموعه‌ای از برنامه‌های کامپیوتری
است که متنی از زبان برنامه نویسی سطح بالا (زبان مبدا) را به زبانی سطح پایین
(زبان مقصد)، مثل اسمبلی یا زبان سطح ماشین، تبدیل می‌کند. خروجی این برنامه ممکن است
برای پردازش شدن توسط برنامه دیگری مثل پیونددهنده مناسب باشد یا فایل متنی باشد
 که انسان نیز بتواند آنرا بخواند.)با رسیدن به آنها، دستورات را نادیده گرفته و
آنها را اجرا نمی کند. برای نوشتن توضیحات تک خطی درPHP می توان از علامت <strong> // </strong>
در ابتدای توضیح استفاده نمود و برای نوشتن توضیحات چند خطی می توان در اولین خط از دستورات
از علامت <strong> */ </strong> و در پایان از علامت <strong> /* </strong> استفاده نمود.</p>

<p><strong> مثال: </strong>
<div class="highlight"><pre><code class="php"><span class="x">&lt;/p&gt;</span>

<span class="x">&lt;p&gt;&amp;lt;?php</span>
<span class="x">// توضیحات تک خطی در PHP&lt;/p&gt;</span>

<span class="x">&lt;p&gt;/&lt;em&gt;</span>
<span class="x">توضیحات بلوکی یا چند خطی در php</span>
<span class="x">&lt;/em&gt;/</span>
<span class="x">echo &amp;ldquo;Hello World!&amp;rdquo;;</span>
<span class="x">?&gt;&lt;/p&gt;</span>

<span class="x">&lt;p&gt;</span>
</code></pre></div></p>

<p><strong>نتیجه اجرا:</strong>
<div class="highlight"><pre><code class="sh">&lt;/p&gt;

&lt;p&gt;Hello World!&lt;/p&gt;

&lt;p&gt;
</code></pre></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[مفاهیم پایه ای PHP]]></title>
    <link href="http://tutors.github.io/blog/2013/08/10/php-fundamental/"/>
    <updated>2013-08-10T13:56:00+04:30</updated>
    <id>http://tutors.github.io/blog/2013/08/10/php-fundamental</id>
    <content type="html"><![CDATA[<h2>مقدمه ای بر زبان PHP</h2>

<h3>PHP چیست؟</h3>

<p>زبان PHP یک زبان اسکریپتی تحت سرور و همچنین ابزار قدرتمندی برای ساخت صفحات وب پویا می باشد.
این زبان، زبانی رایگان و بازمتن مورد استفاده همگانی و بسیار کاربردی می باشد و رقیبی قوی برای
سایر زبان های مورد استفاده در زمینه تولید صفحات وب می باشد.</p>

<h3>یک فایل PHP شامل چه مواردی است؟</h3>

<p>فایل های PHP می توانند شامل متن، کدهای HTML، JavaScript و کد PHP باشند.کدهای PHP قابلیت اجرا بر روی هر سروری را دارند
و نتیجه آنها در مرورگر  به صورت HTML برگردانده می شود. تمامی فایل های زبان PHP دارای پسوند <strong> php. </strong> می باشد.</p>

<h3>قابلیت های PHP:</h3>

<ul>
<li>ایجاد صفحات پویای وب</li>
<li>ایجاد، باز کردن، نوشتن، خواندن و بستن فایل های موجود بر روی سرور</li>
<li>جمع آوری داده های فرم</li>
<li>ارسال و دریافت کوکی ها</li>
<li>اضافه کردن، حذف کردن و تغییر دادن اطلاعات در پایگاه داده</li>
<li>محدود کردن دسترسی کاربران برای دسترسی به صفحات وب</li>
<li>رمزگشایی  داده ها و اطلاعات</li>
</ul>


<p>لازم به ذکر است که شما با استفاده از PHP می توانید علاوه بر خروجی های HTML
خروجی هایی مانند عکس، فایل پی دی اف و حتی فیلم های ساخته شده با
نرم افزار فلش، داشته باشید. زبان PHP همچنین می تواند خروجی های متنی مانند XHTML و XML داشته باشد.</p>

<h3>چرا از زبان PHP استفاده می کنیم؟</h3>

<ul>
<li>زبان PHP بر روی سیستم عامل های مختلفی (از جمله Windows, Linux, Unix, Mac OS X و غیره) اجرا می شود.</li>
<li>زبان PHP تقریبا با تمامی سرورهایی که امروزه استفاده می شوند، سازگار می باشد.</li>
<li>زبان PHP از محدوده گسترده ای از پایگاه  داده ها پشتیسانی می کند.</li>
<li>یادگیری زبان PHP آسان است و به صورت کارا بر روی سرور اجرا می شود.</li>
</ul>


<h2>نحوه نصب PHP:</h2>

<h3>آموزش نصب</h3>

<p>برای شروع استفاده از PHP می توانید یکی از دو روش زیر را استفاده کنید:</p>

<ul>
<li>استفاده از یک میزبان وب ای که از PHP وپایگاه داده پشتیبانی می کند.</li>
<li>نصب یک وب سرور بر روی کامپیوتر شخصی خودتان و سپس نصب PHP و MySQL بر روی آن</li>
</ul>


<h4>استفاده از یک میزبان وبی که از PHP و MySQL پشتیبانی می کند</h4>

<p>در این روش، درصورتیکه سرور شما از PHP پشتیبانی می کند، لازم نیست هیچ کاری انجام
دهید. کافیست فایل های PHP خود را که دارای پسوند <strong> php.</strong> هستند را در پوشه وب
بسازید، سرور به طور اتوماتیک این فایل ها را برای شما اجرا می کند.
همچنین در این روش نیازی نیست که هیچ ابزار اضافی را بر روی سیستم خود نصب کنید.</p>

<h4>راه اندازی سرور محلی</h4>

<p>همانطور که گفته شد PHP یک زبان برنامه نویسی تحت وب است و برای راه اندازی آن
از یک وب سرور استفاده می کنیم. وب سروری که برای PHP استفاده می کنیم، آپاچی است.
کدهای PHP را می توان در هر editor ای نوشت (مانند notepad و ++notepadd).</p>

<p>نصب وب سرور را باید با دقت لازم انجام شود و حتی اگر یکی از مراحل به اشتباه انجام شود،
ممکن است مجبور شوید تمام مراحل را از ابتدا انجام دهید. البته برنامه های سرویس دهنده
ای (مانند WAMP، EasyPHP، PHPtraid، XAMPP و SQLware) وجود دارند که تمام امکانات لازم
برای اجرای برنامه ها را بدون دردسر در اختیار کاربران قرار می دهند. از بین این
برنامه ها، سرویس دهنده WAMP و XAMPP از محبوبیت بسیار زیادی بین برنامه نویسان PHP برخوردارند.
 هنگامی که یکی از سرویس دهند های فوق را نصب می کنید دیگر لازم نیست Apache و MySQL را نصب کنید.
این سرویس دهنده ها خودشان تنظیمات میان PHP و Apache را انجام می دهند.</p>

<h4>راه اندازی WAMP SERVER</h4>

<p>پس از دانلود این برنامه آن را روی سیستم خود نصب نمایید. در یکی از مراحل نصب
این برنامه، کادری ظاهر می شود که در آن می بایست مسیر ریشه برای قرار دادن
فایل های مربوط به سایت تعیین شود، به طور پیش فرض این مسیر در شاخه نصب WAMP
و در پوشه www انتخاب شده است.</p>

<p>نکته: این مسیر را به خاطر بسپارید، زیرا از این پس برای اینکه بتوانید برنامه های
خود را اجرا کنید، حتماً باید آنها را در این پوشه ذخیره کنید.
پس از نصب WAMP، روی ناحیه تذکر از نوار وظیفه یک آیکن به شکل نیم دایره سفید ظاهر می شود.</p>

<p><img src="/images/php/fundamental/wamp_0.png" title="&ldquo;شکل ۱: سرویس دهنده WAMP&rdquo;" ></p>

<p>شکل 1: سرویس دهنده WAMP</p>

<p>ظاهر شدن این آیکن با رنگ های قرمز با زرد به این معناست که سرویس ها به طور کامل
در حال اجرا نیستند و یا اینکه به درستی عمل نمی کنند. در این صورت برای اجرای
مجدد سرویس ها روی آیکن نیم دایره کلیک کنید. به شکل 1 توجه کنید،علامت مثلث کنار
سرویس های Apache و MySQL به معنای این است که سرویس در حال اجراست. در صورتیکه
این علامت به مربع تبدیل شود به معنای توقف سرویس هاست. در این صورت برای اجرای
سرویس روی گزینه  Start/Resume Serviceکلیک کنید.</p>

<p>پس از نصب برنامه WAMP می توانید عملیات برنامه نویسی در PHP را آغاز کنید و
پس از ذخیره هر برنامه، اجرای آن را توسط مرورگر مشاهده کنید.</p>

<h3>نصب یک وب سرور بر روی کامپیوتر شخصی</h3>

<p>درصورتیکه کامپیوتر یا سرور شما از PHP پشتیبانی نمی کند، باید موارد زیر را بر روی آن نصب کنید:</p>

<ul>
<li>وب سرور</li>
<li>زبان PHP</li>
<li>یک پایگاه داده مانند MySQL</li>
</ul>


<p>در صورت عدم استفاده از WAMP یا سرویس دهنده های مشابه، باید PHP، Apache و MySQL را یکی پس از دیگری نصب وپیکر بندی نمایید.</p>
]]></content>
  </entry>
  
</feed>
