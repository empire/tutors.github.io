---
layout: post
title: "حوزه متغيرهاي PHP"
date: 2013-08-21 14:59
comments: true
categories: php-fundamental
author: فاطمه کربلایی
---
حوزه يک متغير بخشي از يک اسکريپت است که متغير مي تواند درآن استفاده شود و يا به آن ارجاع داده شود.

 در PHP چهار حوزه مختلف براي تعريف متغيرها وجود دارد:

*	حوزه محلي[^1]	 
*	حوزه عمومي[^2] 
*	[^3]حوزه ايستا 
*	حوزه پارامتر[^4] 

##  حوزه محلي  ##
به متغيري که در يک تابع PHP تعريف مي شود، متغير محلي گفته مي شود. 

متغير محلي فقط در داخل يک تابع قابل دسترسي مي باشد:

{% highlight php linenos %}

<?php
$x=5; // حوزه عمومي

function myTest()
{
        echo $x; // حوزه محلي
}

myTest();
?>

{% endhighlight %}

**نتيجه اجرا:**
اين اسکريپت هيچ خروجي اي را نشان نمي دهد. زيرا دستور echo به يک متغير محلي x$ رجوع مي کند که در حوزه محلي مقدار دهي نشده است.

**نکته:**
از آنجائيکه متغيرهاي محلي تنها در تابعي که در آن تعريف مي شوند، قابل استفاده هستند، شما مي توانيد در تابع هاي مختلف متغيرهايي با نام هاي يکسان داشته باشيد. 

در واقع متغيرهاي محلي با خاتمه تابع، حذف مي شوند.

## حوزه عمومي ##
متغيري که در خارج از توابع تعريف مي شود، عمومي است و داراي حوزه عمومي است. 

متغيرهاي عمومي مي توانند در هر جاي اسکريپت (به جز در داخل بدنه تابع) تعريف شوند. 

براي دستيابي به يک متغير عمومي در داخل تابع مي توانيد از کلمه کليدي global قبل از نام متغير استفاده کنيد.

**مثال:**

{% highlight php linenos %}
<?php
$x=5; // global scope
$y=10; // global scope

function myTest()
{
          global $x,$y;
           $y=$x+$y;
} 

myTest(); // run function
echo $y; // output the new value for variable $y
?>

{% endhighlight %}

**نتيجه اجرا:**

{% highlight sh linenos %}

15

{% endhighlight %}
PHP تمامي متغيرهاي عمومي را در يک آرايه به نام [GLOBALS[index$ ذخيره مي کند. Index نام متغير را در خود نگهداري مي کند. 

اين آرايه مي تواند از طريق توابع مورد دسترسي واقع شود و توسط آن مي توان متغيرهاي عمومي را مستقيماً بروزرساني کرد. 

براي نمونه، مي توان مثال بالا را به صورت زير بازنويسي نمود:

{% highlight php linenos %}
<?php
$x=5;
$y=10;

function myTest()
{
$GLOBALS['y']=$GLOBALS['x']+$GLOBALS['y'];
} 

myTest();
echo $y;
?>


{% endhighlight %}

**نتيجه اجرا:**

{% highlight sh linenos %}

15

{% endhighlight %}


## حوزه ايستا ##
به طور کلي هنگامي که يک تابع کامل مي شود(به انتهاي تابع مي رسيم)، همه متغيرهاي مربوط به آن حذف مي شوند. 

اما در برخي موارد شما مي خواهيد بعضي از متغيرهاي محلي حذف نشوند، تا بتوانيد در جاهاي ديگر برنامه از مقدار آن ها استفاده کنيد. 

براي اين کار مي بايست هنگامي که براي اولين بار متغير را ايجاد مي کنيد، در جلوي نام آن از کلمه کليدي static استفاده کنيد.

 در اينصورت هر بار که تابع فراخواني مي شود، آن متغير اطلاعاتي که در سري قبلي(در فراخواني قبلي تابع) داشته است در خود نگه مي دارد.

لازم به ذکر است که اين متغير هنوز براي تابع محلي مي باشد.

**مثال:**

{% highlight php linenos %}
<?php

function myTest()
{
     static $x=0;
     echo $x;
     $x++;
}
myTest();
myTest();
myTest();
?>


{% endhighlight %}

**نتيجه اجرا:**

{% highlight sh linenos %}

012

{% endhighlight %}


## حوزه پارامتر ##
پارمتر، يک متغير محلي است که مقدارش توسط فراخواني کد[^5]  به تابع فرستاده مي شود.

 پارامترها، در ليست پارامتر[^6] ، به عنوان بخشي از تعريف تابع، تعريف مي شوند. 

به پارامترها، آرگومان نيز گفته مي شود.(اطلاعات بيشتر در بخش توابع PHP آورده شده است)

{% highlight php linenos %}
<?php

function myTest($x)
{
      echo $x;
}

myTest(5);

?>

{% endhighlight %}

**نتيجه اجرا:**

{% highlight sh linenos %}

5

{% endhighlight %}


[^1]:Local
[^2]:Global
[^3]:Static
[^4]:Parameter
[^5]:Calling code
[^6]:Parameter list