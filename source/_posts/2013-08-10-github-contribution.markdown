---
layout: post
title: "مفاهیم پایه ای PHP"
date: 2013-08-10 13:56
comments: true
categories: php-fundamental
author: فاطمه کربلایی
---

## مقدمه ای بر زبان PHP ##
### PHP چیست؟ ###
PHP  یک زبان اسکریپتی تحت سرور و همچنین ابزار قدرتمندی برای ساخت صفحات وب پویا  و فعل و انفعالی  می باشد. این زبان، زبانی رایگان، مورد استفاده همگانی و بسیار کاربردی می باشد و رقیبی قوی برای سایر زبان های مورد استفاده در زمینه تولید صفحات وب   می باشد.

### یک فایل PHP شامل چه مواردی است؟ ###
فایل های PHP می توانند شامل متن، کدهای HTML، JavaScript و کد PHP باشند.کدهای PHP قابلیت اجرا بر روی هر سروری را دارند و نتیجه آنها در مرورگر  به صورت HTML برگردانده می شود. پسوند تمامی فایل های        **php** ،  PHP.  می باشد.

###### قابلیت های PHP:######
* 	ایجاد صفحات پویای وب
* ایجاد، باز کردن، نوشتن، خواندن و بستن فایل های موجود بر روی سرور
* 	جمع آوری داده های فرم 
*	ارسال و دریافت کوکی ها 
*	اضافه کردن، حذف کردن و تغییر دادن اطلاعات در پایگاه داده
*	محدود کردن دسترسی کاربران برای دسترسی به صفحات وب
*	رمزگشایی  داده ها و اطلاعات

لازم به ذکر است که شما با استفاده از PHP می توانید علاوه بر خروجی های HTML خروجی هایی مانند عکس، فایل پی دی اف و حتی فیلم های ساخته شده با نرم افزار فلش، داشته باشید. زبان PHP همچنین می تواند خروجی های متنی   مانند XHTML و XML داشته باشد.

### چرا از زبان PHP استفاده می کنیم؟ ###
*	PHP بر روی سیستم عامل های مختلفی (از جمله Windows, Linux, Unix, Mac OS X و غیره) اجرا می شود.
*	PHP تقریباً با تمامی سرورهایی که امروزه استفاده می شوند، سازگار می باشد.
*	PHP از محدوده گسترده ای از پایگاه  داده ها پشتیسانی می کند.
*	یادگیری PHP آسان است و به صورت کارا بر روی سرور اجرا می شود.

## نحوه نصب PHP: ##
### آموزش نصب ###
برای شروع استفاده از PHP می توانید یکی از دو روش زیر را استفاده کنید:

*	استفاده از یک میزبان وب ای که از PHP وپایگاه داده  پشتیبانی می کند.
*	نصب یک وب سرور بر روی کامپیوتر شخصی خودتان و سپس نصب PHP و MySQL بر روی آن

### استفاده از یک میزبان وبی که از PHP و MySQL پشتیبانی می کند ###
در این روش درصورتیکه سرور شما از PHP پشتیبانی می کند، لازم نیست هیچ کاری انجام دهید. کافیست فایل های PHP خود را که دارای پسوند php. هستند را در پوشه وب  بسازید، سرور به طور اتوماتیک این فایل ها را برای شما کامپایل  می کند. همچنین در این روش نیازی نیست که هیچ ابزار اضافی را بر روی سیستم خود نصب کنید.

**توضیح:**

به طور کلی هنگامی که بخواهیم برای صفحات پویا کد بنویسیم از یک زبان برنامه نویسی مانند PHP استفاده می شود. برای استفاده از این زبان به یک سرویس دهنده برنامه کاربردی است. این سرویس دهنده تعاملی میان زبان برنامه نویسی  و سرور (سرویس دهنده تحت وب) برقرار می کند. برای اینکه بتوانیم وب سایت خود را عیب یابی و تست کنیم بایستی سرویس دهنده وب را به صورت local بر روی سیستم خود فعال نماییم. بدین منظور باید از فناوری سرویس دهنده وب استفاده شود. در زبان PHP ، سرویس دهنده برنامه کاربردی php server و فناوری سرویس دهنده وب Apache می باشد. کدهای PHP را می توان در هر editor ای نوشت (مانند notepad و notepad++). 
بنابراین برای شروع کار با php می بایست php server را به عنوان سرویس دهنده برنامه و Apache و php را روی سیستم خود نصب نمایید. این کار باید با دقت لازم انجام شود و حتی اگر یکی از مراحل به اشتباه انجام شود، ممکن است مجبور شوید تمام مراحل را از ابتدا انجام دهید. البته برنامه های سرویس دهنده ای (مانند WAMP، EasyPHP، PHPtraid، XAMP و SQLware)وجود دارند که تمام امکانات لازم برای اجرای برنامه ها را بدون دردسر در اختیار کاربران قرار می دهند. از بین این برنامه ها، سرویس دهنده WAMP از محبوبیت بسیار زیادی بین برنامه نویسان PHP برخوردار است. هنگامی که WAMP  را نصب می کنید دیگر لازم نیست Apache و MySQL را نصب کنید.  سرویس دهنده WAMP خودش تنظیمات میان PHP و Apache را انجام می دهد

#### راه اندازی WAMP SERVER ####
پس از دانلود این برنامه آن را روی سیستم خود نصب نمایید. در یکی از مراحل نصب این برنامه، کادری ظاهر می شود که در آن می بایست مسیر ریشه برای قرار دادن فایل های مربوط به سایت تعیین شود، به طور پیش فرض این مسیر در شاخه نصب WAMP و در پوشه WWW انتخاب شده است، اگر مایل بودید می توانید این مسیر را عوض کرده و مسیر مورد نظر خودتان را برای ذخیره فایل ها و اطلاعات مربوط به سایت تعیین کنید.
نکته: این مسیر را به خاطر بسپارید، زیرا از این پس برای اینکه بتوانید برنامه های خود را اجرا کنید، حتماً باید آنها را در این پوشه ذخیره کنید.
پس از نصب WAMP، روی ناحیه تذکر از نوار وظیفه یک آیکن به شکل نیم دایره سفید ظاهر می شود.

![سرویس دهنده WAMP](/images/php/fundamental/wamp_0.png "شکل 1 ")

شکل 1: سرویس دهنده WAMP

ظاهر شدن این آیکن با رنگ های قرمز با زرد به این معناست که سرویس ها به طور کامل در حال اجرا نیستند و یا اینکه به درستی عمل نمی کنند. در این صورت برای اجرای مجدد سرویس ها روی آیکن نیم دایره کلیک کنید. به شکل1 توجه کنید، علامت مثلث کنار سرویس های Apache و MySQL به معنای این است که سرویس در حال اجراست. در صورتیکه این علامت به مربع تبدیل شود به معنای توقف سرویس هاست. در این صورت برای اجرای سرویس روی گزینه  Start/Resume Serviceکلیک کنید.
پس از نصب برنامه WAMP می توانید عملیات برنامه نویسی در PHP را آغاز کنید و پس از ذخیره هر برنامه، اجرای آن را توسط مرورگر مشاهده کنید.

### نصب یک وب سرور بر روی کامپیوتر شخصی ###

درصورتیکه سرور شما از PHP پشتیبانی نمی کند، باید موارد زیر را بر روی آن نصب کنید:

*	وب سرور
*	PHP
*	یک پایگاه داده مانند MySQL

در صورت عدم استفاده از WAMP  یا سرویس دهنده های مشابه، باید PHP، Apache و MySQL را یکی پس از دیگری نصب وپیکر بندی نمایید. روش پیکربندی این برنامه ها به صورت زیر است:

*	پیکربندی PHP 

	در مسیر نصب PHP، فایل php.ini.dist را پیدا کنید.
این فایل را به php.ini تغییر نام داده، سپس آن را در مسیر نصب ویندوز و در پوشه system32 کپی کنید.
زبان PHP برای تنظیم عملیات مختلفی که روی سرویس دهنده انجام می دهد، از دستورالعمل هایی که درون فایل php.ini قرار داده شده است استفاده می کند و برنامه نویس می تواند بسته به نیاز خود این فایل را تغییر دهد. دسترسی به این فایل از طریق WAMP نیز امکان پذیر است. برای باز کردن این فایل در شکل 1، در  زیر منوی PHP، روی گزینه php.ini کلیک کنید.

*	پیکربندی Apache
	
	برای پیکربندی سرویس دهنده وب Apache فایلی به نام httpd.conf در نظر گرفته شده است. این فایل دستورات مختلفی برای پیکربندی و مدیریت رفتارهای مختلف سرویس دهنده دارد. برای دسترسی به این فایل در شکل 1، در زیر منوی Apache، گزینه httpd.conf را انتخاب کنید.
در ابتدای هر سطر از فایل های مربوط به پیکربندی PHP یا Apache، یکی از علائم # یا ; قرار گرفته است. این دو کاراکتر برای درج توضیحات تک خطی به کار برده می شوند، به این معنا که هنگام اجرا هر سطری که در ابتدای آن یکی از این دو علامت در ج شده است، نادیده گرفته می sشود و برای فعال کردن آن باید این کاراکترها از ابتدای سطر برداشته شوند.

**نکته: **
سعی کنید فقط در مواقع لزوم و مطابق دستورالعمل محتویات فایل های httpd.conf و php.ini را دستکاری کنید، در غیر این صورت حتی ممکن است عملکرد این برنامه ها به طور کامل مختل شود

## نحو PHP ##
زبان اسکریپتی PHP بر روی سرور اجرا می شود و نتیجه آن که به صورت HTML است به مرورگر برگردانده می شود. در حقیقت هنگامی که کدهای PHP اجرا می شوند در صورتی که به source آنها نگاه کنیم هیچ کد PHP ای دیده نمی شود، بلکه تنها کدهای HTML دیده می شوند، بدین معنی که  Apache کدهای PHP را به HTML تبدیل می کند. کدهای PHP در قالبی به صورت زیر و در بین تگ body نوشته می شوند:

{% highlight html lineones%}
<!DOCTYPE html>
<html>
<body>


</body>
</html>

{% endhighlight%}

###  نحو کلی  PHP ###
کد PHP اسکریپت می تواند در هر ویرایشگری نوشته شود. این کد با تگ  <?php آغاز و با تگ ?> خاتمه می یابد:
{% highlight php linenos %}

<?php
کدهای PHP در این قسمت نوشته می شوند//
?>

{% endhighlight %}


همانطور که پیش از این گفته شد، پسوند پیش فرض فایل های **php**	، PHP**.** می باشد. به طور کلی هر فایل PHP شامل تگ های HTML و کدهای اسکریپتی PHP می باشد. در زیر مثال ساده ای از یک فایل PHP آورده شده است.

**مثال: **کد PHPای بنویسید که کلمه "Hello World!" را در سرور چاپ کند:

{% highlight php linenos %}

<?php
  	echo "Hello World!";
?>

{% endhighlight %}

**نتیجه اجرا:**
Hello World!
 
هر خط کد در PHP می بایست با یک علامت ‘;’ خاتمه یابد. علامت ‘;’ یک جداکننده می باشد و به منظور جدا سازی مجموعه ای از دستورالعمل ها از یکدیگر به کار می رود.

در PHP دو روش برای چاپ متن در مرورگر وجود دارد: echo و print

### نوشتن توضیحات در PHP ###

توضیحات دستوراتی هستند که کامپایلر ( برنامه یا مجموعه‌ای از برنامه‌های کامپیوتری است که متنی از زبان برنامه نویسی سطح بالا (زبان مبدا) را به زبانی سطح پایین (زبان مقصد)، مثل اسمبلی یا زبان سطح ماشین، تبدیل می‌کند. خروجی این برنامه ممکن است برای پردازش شدن توسط برنامه دیگری مثل پیونددهنده مناسب باشد یا فایل متنی باشد که انسان نیز بتواند آنرا بخواند.)با رسیدن به آنها، دستورات را نادیده گرفته و آنها را اجرا نمی کند. برای نوشتن توضیحات تک خطی درPHP می توان از علامت ‘//’ در ابتدای توضیح استفاده نمود و برای نوشتن توضیحات چند خطی می توان در اولین خط از دستورات از علامت ‘/*’ و در پایان از علامت ‘*/’ استفاده نمود.

**مثال:**
{% highlight php linenos %}

<?php
توضیحات تک خطی در //php

/*
توضیحات بلوکی یا چند خطی در php
*/
echo "Hello World!";
?>


{% endhighlight %}

**نتیجه اجرا:**
Hello World!

